apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: carbon-aware-keda-operator
    control-plane: controller-manager
  name: carbon-aware-keda-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: carbonawarekedascalers.carbonaware.kubernetes.azure.com
spec:
  group: carbonaware.kubernetes.azure.com
  names:
    kind: CarbonAwareKedaScaler
    listKind: CarbonAwareKedaScalerList
    plural: carbonawarekedascalers
    singular: carbonawarekedascaler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CarbonAwareKedaScaler is the Schema for the carbonawarekedascalers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CarbonAwareKedaScalerSpec defines the desired state of CarbonAwareKedaScaler
            properties:
              carbonIntensityForecastDataSource:
                description: carbon intensity forecast data source must have at least
                  localConfigMap or mockCarbonForecast set
                properties:
                  localConfigMap:
                    description: local configmap details
                    properties:
                      key:
                        description: key of the carbon intensity forecast data in
                          the configmap
                        type: string
                      name:
                        description: name of the configmap
                        type: string
                      namespace:
                        description: namespace of the configmap
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  mockCarbonForecast:
                    description: mock carbon forecast data
                    type: boolean
                type: object
              ecoModeOff:
                description: configuration to disable carbon aware scaler
                properties:
                  carbonIntensityDuration:
                    description: disable carbon aware scaler when carbon intensity
                      is above a threshold for a specific duration
                    properties:
                      carbonIntensityThreshold:
                        description: carbon intensity threshold to disable carbon
                          aware scaler
                        format: int32
                        type: integer
                      overrideEcoAfterDurationInMins:
                        description: length of time in minutes to disable carbon aware
                          scaler when the carbon intensity threshold meets or exceeds
                          carbonIntensityThreshold
                        format: int32
                        type: integer
                    required:
                    - carbonIntensityThreshold
                    - overrideEcoAfterDurationInMins
                    type: object
                  customSchedule:
                    description: disable carbon aware scaler at specific time periods
                    items:
                      description: Schedule represents a time period to disable carbon
                        aware scaler
                      properties:
                        endTime:
                          description: end time in utc
                          type: string
                        startTime:
                          description: start time in utc
                          type: string
                      required:
                      - endTime
                      - startTime
                      type: object
                    type: array
                  maxReplicas:
                    description: default maximum number of replicas when carbon aware
                      scaler is disabled
                    format: int32
                    type: integer
                  recurringSchedule:
                    description: disable carbon aware scaler on a recurring schedule
                      in Cron format, see https://en.wikipedia.org/wiki/Cron.
                    items:
                      type: string
                    type: array
                required:
                - maxReplicas
                type: object
              kedaTarget:
                description: type of the keda object to scale
                enum:
                - scaledobjects.keda.sh
                - scaledjobs.keda.sh
                type: string
              kedaTargetRef:
                description: namespace of the keda target
                properties:
                  name:
                    description: name of the keda target
                    type: string
                  namespace:
                    description: namespace of the keda target
                    type: string
                required:
                - name
                - namespace
                type: object
              maxReplicasByCarbonIntensity:
                description: array of carbon intensity values preferrably in ascending
                  order; each threshold value represents the upper limit and previous
                  entry represents lower limit
                items:
                  description: CarbonIntensityConfig represents the configuration
                    to scale the number of replicas based on carbon intensity
                  properties:
                    carbonIntensityThreshold:
                      description: carbon intensity threshold to scale the number
                        of replicas
                      format: int32
                      type: integer
                    maxReplicas:
                      description: maximum number of replicas to scale to when the
                        carbon intensity threshold meets or exceeds carbonIntensityThreshold
                      format: int32
                      type: integer
                  required:
                  - carbonIntensityThreshold
                  - maxReplicas
                  type: object
                minItems: 1
                type: array
            required:
            - carbonIntensityForecastDataSource
            - ecoModeOff
            - kedaTarget
            - kedaTargetRef
            - maxReplicasByCarbonIntensity
            type: object
          status:
            description: CarbonAwareKedaScalerStatus defines the observed state of
              CarbonAwareKedaScaler
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Conditions is a list of conditions and their status.'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-controller-manager
  namespace: carbon-aware-keda-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-leader-election-role
  namespace: carbon-aware-keda-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: carbon-aware-keda-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - carbonaware.kubernetes.azure.com
  resources:
  - carbonawarekedascalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - carbonaware.kubernetes.azure.com
  resources:
  - carbonawarekedascalers/finalizers
  verbs:
  - update
- apiGroups:
  - carbonaware.kubernetes.azure.com
  resources:
  - carbonawarekedascalers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - keda.sh
  resources:
  - scaledjobs
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-leader-election-rolebinding
  namespace: carbon-aware-keda-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: carbon-aware-keda-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: carbon-aware-keda-operator-controller-manager
  namespace: carbon-aware-keda-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: carbon-aware-keda-operator-manager-role
subjects:
- kind: ServiceAccount
  name: carbon-aware-keda-operator-controller-manager
  namespace: carbon-aware-keda-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: carbon-aware-keda-operator
  name: carbon-aware-keda-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: carbon-aware-keda-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: carbon-aware-keda-operator-controller-manager
  namespace: carbon-aware-keda-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: carbon-aware-keda-operator
    control-plane: controller-manager
  name: carbon-aware-keda-operator-controller-manager-metrics-service
  namespace: carbon-aware-keda-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: carbon-aware-keda-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: carbon-aware-keda-operator
    control-plane: controller-manager
  name: carbon-aware-keda-operator-controller-manager
  namespace: carbon-aware-keda-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/azure/carbon-aware-keda-operator:v0.2.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: carbon-aware-keda-operator-controller-manager
      terminationGracePeriodSeconds: 10
